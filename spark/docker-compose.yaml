version: '3.7'

services:
  juptyer:
    image: 'weygu/pyspark-notebook-nebulagraph:2.4.5-hadoop2.7'
    container_name: jupyter
    restart: always
    ports:
      - '8888:8888'
    volumes:
      - '${PWD}/:/root'
    networks:
      - nebula-net
    healthcheck:
      test: ["CMD", "netstat", "-plunt", "| grep 8888"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      - PYSPARK_PYTHON=python3

  master:
    networks:
      - nebula-net
    volumes:
      - '${PWD}/:/root'
    image: 'bde2020/spark-master:2.4.5-hadoop2.7'
    container_name: sparkmaster
    ports:
      - 7077:7077
      - 6066:6066
      - 18080:8080
    healthcheck:
      test: ["CMD", "netstat", "-plunt", "| grep 8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    environment:
      - PYSPARK_PYTHON=python3

  spark-worker-1:
    image: bde2020/spark-worker:2.4.5-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://sparkmaster:7077"

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    networks:
      - nebula-net

# copied from https://github.com/big-data-europe/docker-hadoop/blob/master/hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - nebula-net
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    networks:
      - nebula-net

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    networks:
      - nebula-net
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    networks:
      - nebula-net
  
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:

networks:
  nebula-net:
    external: true
